{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"scripts.min.js","sourcesContent":["// import \"@babel/polyfill\";\r\n// Polyfills voor babel (zodat het werkt in IE 11)\r\n($(function() {\r\n\r\n\r\n    const tableHeaderDom = document.querySelector('.table-header');\r\n    const headerCols = tableHeaderDom.querySelectorAll('.col');\r\n    const tableBodyDOM = document.querySelector('.table-body');\r\n    const resultInformationDOM = document.querySelector('.result-information');\r\n\r\n\r\n    /*\r\n    * TODO: Tabular gebruiken\r\n    * */\r\n\r\n    /*TODO: json imports via webpack werkend krijgen..\r\n    * */\r\n    // const werknemersJson = {\r\n    //     \"werknemers\": {\r\n    //         \"993\": {\r\n    //             \"name\": \"Gerard van Halst\",\r\n    //             \"id\": \"993\",\r\n    //             \"job_function\": \"Medewerker\",\r\n    //             \"starting_date\": \"12-09-2005\",\r\n    //             \"status\": \"aanwezig\",\r\n    //             \"notes\": \"...\",\r\n    //             \"salary\":  \"2.301,34\"\r\n    //         },\r\n    //         \"994\": {\r\n    //             \"name\": \"Berendt van Halst\",\r\n    //             \"id\": \"994\",\r\n    //             \"job_function\": \"Medewerker\",\r\n    //             \"starting_date\": \"12-09-2005\",\r\n    //             \"status\": \"aanwezig\",\r\n    //             \"notes\": \"...\",\r\n    //             \"salary\":  \"4.301,34\"\r\n    //         },\r\n    //         \"995\": {\r\n    //             \"name\": \"Truus van der Apel\",\r\n    //             \"id\": \"995\",\r\n    //             \"job_function\": \"Medewerker\",\r\n    //             \"starting_date\": \"01-09-1999\",\r\n    //             \"status\": \"aanwezig\",\r\n    //             \"notes\": \"...\",\r\n    //             \"salary\":  \"4.301,34\"\r\n    //         },\r\n    //         \"996\": {\r\n    //             \"name\": \"Loes van Keepbergen\",\r\n    //             \"id\": \"996\",\r\n    //             \"job_function\": \"Medewerker\",\r\n    //             \"starting_date\": \"12-09-2005\",\r\n    //             \"status\": \"afwezig\",\r\n    //             \"notes\": \"...\",\r\n    //             \"salary\":  \"4.301,34\"\r\n    //         },\r\n    //         \"123\": {\r\n    //             \"name\": \"Peter de Vries - Broekhoven\",\r\n    //             \"id\": \"123\",\r\n    //             \"job_function\": \"Monteur\",\r\n    //             \"starting_date\": \"28-11-1994\",\r\n    //             \"status\": \"afwezig\",\r\n    //             \"notes\": \"...\",\r\n    //             \"salary\":  \"3.010,10\"\r\n    //         }\r\n    //     }\r\n    // }\r\n    // let jsonData = Object.entries(werknemersJson.werknemers);\r\n    // setTimeout(function () {\r\n    //     var table = new Tabulator(\".table\", {\r\n    //         height:311,\r\n    //         layout:\"fitColumns\",\r\n    //         autoColumns:true,\r\n    //         placeholder:\"No Data Available\", //display message to user on empty table\r\n    //     });\r\n    //     table.setData(jsonData);\r\n    // },1000)\r\n\r\n\r\n\r\n\r\n    // sorteer de resultaten met deze functie\r\n    function sortResults(prop, data, asc) {\r\n        data.sort(function(a, b) {\r\n            if (asc) {\r\n                return (a[prop] > b[prop]) ? 1 : ((a[prop] < b[prop]) ? -1 : 0);\r\n            } else {\r\n                return (b[prop] > a[prop]) ? 1 : ((b[prop] < a[prop]) ? -1 : 0);\r\n            }\r\n        });\r\n    }\r\n    // Maak kolommen DOM\r\n    function rowheaderColsRender(description, item) {\r\n        if (description == 'status') {\r\n            return `<div class=\"col ${description}\"><span class=\"status ${item}\">${item}</span></div>`;\r\n        }else{\r\n            return `<div class=\"col ${description}\">${item}</div>`;\r\n        }\r\n    }\r\n    function createResultInformation(items){\r\n        return `.. t/m .. van ${items.length} resultaten`;\r\n    }\r\n\r\n    //Haal werknemers op uit json...\r\n    $.getJSON( \"./ajax/werknemers.json\", function( data ) {\r\n\r\n        const createSortedTable = function(sortBy,asc) {\r\n            //Maak tabel eerst leeg...\r\n            tableBodyDOM.innerHTML = '';\r\n            $.each(data, function (key, val) {\r\n                //Werknemers object\r\n                let sortableArray = Object.values(val);\r\n                // Sorteer resultaten op basis van de imput van deze functie..\r\n                sortResults(sortBy, sortableArray, asc);\r\n                const sortedData = sortableArray;\r\n\r\n\r\n                let amount = createResultInformation(sortedData);\r\n                resultInformationDOM.innerHTML = amount;\r\n\r\n                $.each(sortedData, function (key, data) {\r\n\r\n                    let renderheaderCols = [];\r\n                    //Zet alle kolommen met werknemergegevens bij elkaar\r\n                    $.each(data, function (key, colContent) {\r\n                        renderheaderCols.push(rowheaderColsRender(key, colContent));\r\n                    });\r\n\r\n                    //checkbox moet aan elke eerste kolom worden toegevoegd...\r\n                    let checkboxDOM = `<div class=\"col\"><span class=\"checkbox\"></span></div>`;\r\n                    //Zet de checkbox aan het begin van de array met te renderen elementen\r\n                    renderheaderCols.unshift(checkboxDOM);\r\n\r\n                    //Maak nieuwe rij voor de tabel met werknemers\r\n                    let newRow = document.createElement('div');\r\n                    newRow.className += 'row';\r\n\r\n                    //Zet de colommen (gegevens van medewerkers) in de rijen...\r\n                    newRow.innerHTML = renderheaderCols.join(\"\");\r\n\r\n                    //Zet de nieuwe elementen in de table body\r\n                    tableBodyDOM.appendChild(newRow);\r\n\r\n                });\r\n            });\r\n        }\r\n\r\n\r\n\r\n        //Vul de tabel met data als pagina wordt ingeladen..\r\n        createSortedTable('name','asc');\r\n\r\n        //Sorteer resultaten in tabel door op elementen te klikken...\r\n        for (var i = 0; i < headerCols.length; i++) {\r\n            var sortItem = headerCols[i];\r\n            let action = sortItem.getAttribute(\"data-sort\");\r\n\r\n            if(action){\r\n                sortItem.addEventListener('click', function() {\r\n                    //Maak alle sorteer buttons inactief, behalve degene die is aangeklikt...\r\n                    $(this).toggleClass('active');\r\n                    $(this).siblings().removeClass('active');\r\n\r\n                    if (this.classList.contains('active')){\r\n                        //Maak resultaten afllopend bij 2e kleer klikken...\r\n                        createSortedTable(action,false);\r\n                    }else{\r\n                        //Maak resultaten oplopend bij 1e kleer klikken...\r\n                        createSortedTable(action,true);\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n\r\n    });\r\n\r\n}));\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":"/source/"}